name: Pipeline with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and start Docker Compose
        run: |
          docker compose -f docker-compose.yml up --build -d

      - name: Wait for containers to be ready
        run: |
          sleep 10

      - name: Run tests
        run: |
          dotnet test ./tests/ArchitectureTests/ArchitectureTests.csproj

      - name: Clean up Docker containers
        run: |
          docker compose -f docker-compose.yml down

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

      - name: Deploy to VPS
        env:
          PATH_TO_PROJECT: "/projects/Petopia_BackEnd"
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
          if [ ! -d ${{ env.PATH_TO_PROJECT }} ]; then
            mkdir ${{ env.PATH_TO_PROJECT }}
          fi
          if [ ! -d ${{ env.PATH_TO_PROJECT }}/.git ]; then
            git clone git@github.com:ddnhuy/Petopia_BackEnd.git ${{ env.PATH_TO_PROJECT }}
          fi
          cd ${{ env.PATH_TO_PROJECT }} && git checkout main && git pull && docker compose -f "docker-compose.release.yml" up -d --build"

      - name: Clean up
        run: rm -rf ~/.ssh
